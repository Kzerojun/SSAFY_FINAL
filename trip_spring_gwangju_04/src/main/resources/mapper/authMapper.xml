<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.enjoytrip.auth.model.mapper.AuthMapper">


    <resultMap id="userResultMap" type="com.enjoytrip.user.model.dto.UserDto">
        <result column="user_no" property="userNo" />
        <result column="user_email" property="userEmail" />
        <result column="user_pwd" property="userPwd" />
        <result column="user_name" property="userName" />
        <result column="created_at" property="createdAt" />
        <result column="role" property="role" javaType="com.enjoytrip.user.constants.Role" />
        <result column="profile_image" property="profileImage" />
    </resultMap>

    <select id="getUserByEmail" parameterType="string">
        SELECT
            user_no AS userNo,
            user_email AS userEmail,
            user_pwd AS userPwd,
            user_name AS userName,
            created_at AS createdAt,
            role AS role,
            profile_image AS profileImage
        FROM users
        WHERE user_email = #{email}
    </select>

    <!-- 회원가입 -->
    <insert id="signUp" parameterType="com.enjoytrip.auth.dto.request.SignUpRequest">
        INSERT INTO users (user_email, user_pwd, user_name)
        VALUES (#{email}, #{password}, #{name})
    </insert>

    <!-- 사용자 비활성화 -->
    <update id="deactivateUser" parameterType="com.enjoytrip.auth.dto.request.DeactivateRequest">
        UPDATE users
        SET user_pwd = NULL
        WHERE user_email = #{email}
    </update>

    <!-- 로그인 -->
    <select id="loginUser" parameterType="com.enjoytrip.auth.dto.request.LoginRequest" resultType="com.enjoytrip.user.model.dto.UserDto">
        SELECT
            user_no AS userNo,         -- UserDto의 userNo 필드에 매핑
            user_email AS userEmail,   -- UserDto의 userEmail 필드에 매핑
            user_pwd AS userPwd,       -- UserDto의 userPwd 필드에 매핑
            user_name AS userName,     -- UserDto의 userName 필드에 매핑
            created_at AS createdAt    -- UserDto의 createdAt 필드에 매핑
        FROM users
        WHERE user_email = #{email}
          AND user_pwd = #{password}
    </select>


</mapper>
